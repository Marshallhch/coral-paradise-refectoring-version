import { configureStore } from '@reduxjs/toolkit';
import searchSlice from './searchSlice';

const store = configureStore({
  reducer: {
    searchLists: searchSlice,
  },
});

export default store;

위 코드는 store.js 코드 입니다.

import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';
import { getOptions } from '../utils/fetchData';
// import axios from 'axios';

const initialState = {
  data: [],
  status: 'idle',
};

const searchSlice = createSlice({
  name: 'searchLists',
  initialState,
  extraReducers: (builder) => {
    builder
      .addCase(getSearchLists.pending, (state) => {
        state.status = 'loading';
      })
      .addCase(getSearchLists.fulfilled, (state, action) => {
        state.data = action.payload;
        state.status = 'idle';
      });
    // .addCase(getSearchLists.rejected, (state) => {
    //   state.status = 'error';
    // });
  },
});

export const { fetchLists } = searchSlice.actions;
export default searchSlice.reducer;

export const getSearchLists = createAsyncThunk(
  'searchLists/get',
  async (args) => {
    // console.log(args);
    const data = await fetch(
      `https://airbnb13.p.rapidapi.com/search-location?location=${args.location}&checkin=${args.checkIn}&checkout=${args.checkOut}&adults=${args.adults}&children=${args.children}&pets=${args.pets}&page=1&currency=KRW`,
      getOptions
    );
    const result = await data.json();
    return result;
  }
);

위 코드는 searchSlice.js 입니다.

import React, { useEffect } from 'react';
import { useSelector, useDispatch } from 'react-redux';
import { getSearchLists } from '../redux/searchSlice';

import Header from '../components/Header';

const SearchLists = () => {
  const dispatch = useDispatch();
  const { data: searchLists, status } = useSelector(
    (state) => state.searchLists
  );

  const { results } = searchLists;

  console.log(results, status);

  useEffect(() => {
    dispatch(getSearchLists());
  }, [dispatch]);

  return (
    <div>
      <Header />
      <h1>SearchLists</h1>
      {status === 'loading' ? (
        <div>Loading...</div>
      ) : (
        <ul>
          {results.map((item) => (
            <li key={item.id}>{item.name}</li>
          ))}
        </ul>
      )}
    </div>
  );
};

export default SearchLists;

위 코드는 searchLists 컴포넌트 코드 입니다.

searchLists 컴포넌트 코드의 첫 실행 화면은 잘 실행 되지만, 여전히 화면을 갱신하면 데이터가 사라집니다. 어떻게 해결해야 할까요?